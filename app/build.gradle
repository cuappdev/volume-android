apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: "com.apollographql.apollo"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.volume_android"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

apollo {
    // instruct the compiler to generate Kotlin models
    generateKotlinModels.set(true)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.2.1'

    implementation 'com.squareup.okhttp3:okhttp:4.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.0'

    implementation 'com.squareup.picasso:picasso:2.71828'

    //RetroFit
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    implementation 'com.apollographql.apollo:apollo-rx2-support:2.4.5'
    //RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"


//    //Apollo
//    implementation("com.apollographql.apollo:apollo-runtime:2.4.5")
//    // optional: if you want to use the normalized cache
//    implementation("com.apollographql.apollo:apollo-normalized-cache-sqlite:2.4.5")
//    // optional: for coroutines support
//    implementation("com.apollographql.apollo:apollo-coroutines-support:2.4.5")
//    // optional: for RxJava3 support
//    implementation("com.apollographql.apollo:apollo-rx3-support:2.4.5")
//    // optional: if you just want the generated models and parsers and write your own HTTP code/cache code, you can remove apollo-runtime
//    // and use apollo-api instead
//    implementation("com.apollographql.apollo:apollo-api:2.4.5")
    implementation 'com.apollographql.apollo:apollo-runtime:2.4.5'
    implementation 'com.apollographql.apollo:apollo-android-support:2.4.5'

}

